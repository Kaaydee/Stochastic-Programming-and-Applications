import networkx as nx
import matplotlib.pyplot as plt
import time
star = time.time()
G = nx.DiGraph()
G.add_node("0", demand=-8)
G.add_node("7", demand=8)
G.add_edge("0", "1", weight=5, capacity=6)
G.add_edge("0", "2", weight=6, capacity=5)
G.add_edge("1", "2", weight=7, capacity=4)
G.add_edge("1", "3", weight=4, capacity=8)
G.add_edge("1", "4", weight=8, capacity=3)
G.add_edge("2", "3", weight=9, capacity=3)
G.add_edge("2", "4", weight=2, capacity=8)
G.add_edge("3", "4", weight=3, capacity=7)
G.add_edge("3", "5", weight=5, capacity=5)
G.add_edge("3", "6", weight=6, capacity=3)
G.add_edge("4", "5", weight=4, capacity=7)
G.add_edge("4", "6", weight=8, capacity=2)
G.add_edge("5", "6", weight=9, capacity=1)
G.add_edge("5", "7", weight=2, capacity=7)
G.add_edge("6", "7", weight=8, capacity=2)

flowDict = nx.min_cost_flow(G)
min_cost = nx.cost_of_flow(G, flowDict)
print(min_cost)
pos = nx.spring_layout(G)
nx.draw(G, pos, with_labels=True, node_size=700, node_color='skyblue')
nx.draw_networkx_edge_labels(G, pos, edge_labels={(i, j): f"{flowDict[i][j]}/{G[i][j]['capacity']}" for i, j in G.edges()})
end = time.time()
print(end-star)
plt.show()